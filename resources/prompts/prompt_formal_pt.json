{
    "BAREBONE": "Given an interval temporal logic formula in the language of Halpern and Shoham's Modal Logic of Allen's Relations, reply with uppercase \"[VALID]\" if the formula is valid or uppercase \"[INVALID]\" if it is not.",
    "CONTEXT": "## **Purpose**\nHS is a formal system for reasoning about interval-based events on a linear model based on the natural numbers. This context will define HS's syntax and semantics. The ultimate goal is to check if a HS formula is logically valid.",
    "SYNTAX": "## **Syntax of HS**\n\n### **Propositional Letters**\nLet AP be a countable set of atomic propositions (p, q, r, ...), representing basic facts.\n\n### **Well-Formed Formulas (wffs)**\nHS formulas are built inductively:\n- **Base case**: Every p in AP is a wff.\n- **Inductive cases**: If φ and ψ are wffs, then so are:\n  - **Boolean operators:**\n    - !φ (negation)\n    - φ & ψ (conjunction)\n    - φ | ψ (disjunction)\n    - φ -> ψ (implication)\n    - φ <-> ψ (double implication)\n  - **Temporal operators:**\n    - <meets> φ (Allen's relation 'meets')\n    - <met_by> φ (Allen's relation 'met-by')\n    - <later> φ (Allen's relation 'later')\n    - <before> φ (Allen's relation 'before')\n    - <starts> φ (Allen's relation 'starts')\n    - <started_by> φ (Allen's relation 'started-by')\n    - <finishes> φ (Allen's relation 'finishes')\n    - <finished_by> φ (Allen's relation 'later')\n    - <during> φ (Allen's relation 'during')\n    - <contains> φ (Allen's relation 'contains')\n    - <overlaps> φ (Allen's relation 'overlaps')\n    - <overlapped_by> φ (Allen's relation 'overlapped-by')\n\nEvery modal operator of the type <operator> has its universal counterpart denoted by [operator].",
    "SEMANTICS": "## **Semantics over Infinite Traces**\nFormulas of HS are interpreted over interval models based on the natural numbers N. Define I(N) as the set of all intervals [x,y] where x and y are natural numbers and x<y, and V as a function that assigns, to each interval [x,y], the subset of AP of all and only propositional letters that are true on [x,y]. A model M is a pair (I(N),V). The satisfaction relation ** M,[x,y]|= φ ** for a model M and an interval [x,y] is defined by induction on the formula:\n\n- **Atomic Propositions:**\n  - M,[x,y] |= p if and only if p belongs to V([x,y]), for all atomic propositions p in AP.\n- **Boolean Operators:**\n  - M,[x,y] |= !φ if and only if M,[x,y] |/= φ, that is, φ is not satisfied on the interval [x,y] in the model M.\n  - M,[x,y]  |= φ & ψ if and only if M,[x,y]  |= φ and M,[x,y]  |= ψ.\n  - M,[x,y]  |= φ | ψ if and only if M,[x,y]  |= φ or M,[x,y]  |= ψ.\n  - M,[x,y]  |= φ -> ψ if and only if M,[x,y]  |/= φ or M,[x,y]  |= ψ.\n  - M,[x,y]  |= φ <-> ψ if and only if M,[x,y]  |= φ -> ψ and M,[x,y] |= ψ -> φ.\n- **Temporal Operators:**\n  - M,[x,y]  |= <meets> φ if and only if there exists z>y such that M,[y,x] |= φ.\n  - M,[x,y]  |= <met_by> φ if and only if there exists z<x such that M,[z,x] |= φ.\n  - M,[x,y]  |= <later> φ if and only if there exist z>y and t>y such that M,[z,t] |= φ.\n  - M,[x,y]  |= <before> φ if and only if there exist z<x and t<z such that M,[t,z] |= φ.\n  - M,[x,y]  |= <starts> φ if and only if there exists x<z<y such that M,[x,z] |= φ.\n  - M,[x,y]  |= <started_by> φ if and only if there exists z>y such that M,[x,z] |= φ.\n  - M,[x,y]  |= <finishes> φ if and only if there exists x<z<y such that M,[z,y] |= φ.\n  - M,[x,y]  |= <finished_by> φ if and only if there exists z<x such that M,[z,y] |= φ.\n  - M,[x,y]  |= <during> φ if and only if there exist x<z<t<y such that M,[z,t] |= φ.\n  - M,[x,y]  |= <contains> φ if and only if there exist z<x<y<t such that M,[z,t] |= φ.\n  - M,[x,y]  |= <overlaps> φ if and only if there exist x<z<y<t such that M,[z,t] |= φ.\n  - M,[x,y]  |= <overlapped_by> φ if and only if there exist z<x<t<y such that M,[z,t] |= φ.\n\nA formula φ is said to be **satisfiable** if and only if there exists a model M and an interval [x,y] such that M,[x,y] |= φ, and it is said to be **valid** if and only if every model and every interval in it satisfies φ.",
    "BASE_TASK": "# **Task: Evaluate HS Formula Validity**\n\n## **Objective**\nDetermine whether the formula is valid using HS semantics and reasoning. The formula can be written using symbols for atomic propositions (e.g., p, q, r, ...), negation operator (i.e., !), conjunction operator (i.e., &), disjunction operator (i.e., |), implication operator (i.e., ->), double implication operator (i.e., <->),  existential operators (i.e., <meets>, <met_by>, <later>, <before>, <starts>, <started_by>, <finishes>, <finished_by>, <during>, <contains>, <overlaps>, <overlapped_by>), and universal operators (i.e., [meets], [met_by], [later], [before], [starts], [started_by], [finishes], [finished_by], [during], [contains], [overlaps], [overlapped_by]). No other symbols are allowed.",
    "COT_TASK": "## **Instructions**\nFollow these steps rigorously:\n1. **Parse the Formulas**: Identify operators and subformulas.\n2. **Apply Semantics**: Check if the formula necessarily holds in all infinite traces.\n3. **Construct Proof/Counterexample**:\n   - If valid: Provide a **step-by-step proof** showing an argument for validity.\n   - If invalid: Build a **concrete model** M and identify an interval on it where the formula does not hold.\n4. **Conclude**: Answer with uppercase \"[VALID]\" if the formula is valid or uppercase \"[INVALID]\" if it is not. No other responses are allowed.",
    "NO_COT_TASK": "## **Instructions**\nReply **only** with uppercase \"[VALID]\" if the formula is valid or uppercase \"[INVALID]\" if it is not. **Do not explain your reasoning**."
}
